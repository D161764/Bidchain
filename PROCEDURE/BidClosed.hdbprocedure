PROCEDURE "BIDCHAIN"."BIDDINGCHAIN.PROCEDURE::BidClosed" (
    IN project_owner NVARCHAR(60),
    IN project_executor NVARCHAR(60),
    IN list_id NVARCHAR(20),
    IN project_id NVARCHAR(20),
    IN owner_bal INT,
    IN executor_bal INT,
    OUT ex_error "BIDDINGCHAIN.DBARTIFACT::TableAndStructure.tt_exception"
    
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER AS
   --DEFAULT SCHEMA <default_schema_name>
--   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   declare exeuc_id Nvarchar(20);
   IF (:project_owner is NULL 
   OR :project_executor is NULL 
   OR :list_id is NULL 
   OR :project_id is NULL 
   ) THEN 
		ex_error = SELECT 500 AS http_status_code, 
					'Please fill all the parameters '  AS error_message, 
					'Please fill all the parameters ' AS detail
				FROM dummy; 
	ELSE 
	select "userid" into exeuc_id from "BIDCHAIN"."BIDDINGCHAIN.DBARTIFACT::TableAndStructure.UserProfile" where "email" = :project_executor;
	
	  update "BIDCHAIN"."BIDDINGCHAIN.DBARTIFACT::TableAndStructure.Listing" set "listing_status" = 'Closed' , "last_updated_on" = CURRENT_TIMESTAMP
where "listid" = :list_id;
       update "BIDCHAIN"."BIDDINGCHAIN.DBARTIFACT::TableAndStructure.Projects" set "project_executioner" = exeuc_id , "last_updated_on" = CURRENT_TIMESTAMP
where "projectid" = :project_id;

       update "BIDCHAIN"."BIDDINGCHAIN.DBARTIFACT::TableAndStructure.Projects" set "listing_status" = 'Closed' , "last_updated_on" = CURRENT_TIMESTAMP
where "projectid" = :project_id;
 
       update "BIDCHAIN"."BIDDINGCHAIN.DBARTIFACT::TableAndStructure.UserProfile" set "balances" = :owner_bal, "last_updated_on" = CURRENT_TIMESTAMP
where "email" = :project_owner;

      update "BIDCHAIN"."BIDDINGCHAIN.DBARTIFACT::TableAndStructure.UserProfile" set "balances" = :executor_bal, "last_updated_on" = CURRENT_TIMESTAMP
where "email" = :project_executor;


   END IF;

END